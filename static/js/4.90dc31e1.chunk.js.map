{"version":3,"sources":["hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/index.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/index.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","connect","state","isAuth","auth","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","className","styles","item","src","message","likeCount","maxLength100","maxLength","AddPostForm","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","reduxForm","form","MyPosts","React","memo","postElement","postsData","map","el","id","addPost","newPost","profilePage","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","onBlur","updateStatus","onChange","e","target","ProfileInfo","profile","profileInfo","photos","large","fullName","aboutMe","lookingForAJobDescription","Preloader","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedId","history","getUserProfile","getUserStatus","compose","getProfile","getStatus","getAuthorizedId","withRouter"],"mappings":"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","file":"static/js/4.90dc31e1.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom'\n\nexport const withAuthRedirect = (Component) => {\n    const mapStatetoPropsFromRedirect = (state) => {\n        return {\n          isAuth: state.auth.isAuth\n        };\n      };\n    let RedirectComponent = (props) => {\n        if(!props.isAuth) return <Redirect to='/login'/>\n        return <Component {...props}/>\n    }\n    return connect(mapStatetoPropsFromRedirect)(RedirectComponent)\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Y4b9\"};","import Post from './Post'\n\nexport default Post","import React from \"react\";\nimport styles from \"./Post.module.css\";\nconst Post = (props) => {\n  return (\n    <div className={styles.item}>\n      <img src=\"https://e7.pngegg.com/pngimages/931/209/png-clipart-computer-icons-symbol-avatar-logo-person-with-helmut-miscellaneous-black.png\" />\n      {props.message}\n      <div>\n        <span>Like: {props.likeCount}</span>\n      </div>\n    </div>\n  );\n};\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../../utils/FormsControl\";\nimport { maxLength, required } from \"../../../utils/validator\";\nimport Post from \"./Post\";\n\nlet maxLength100 = maxLength(100)\nlet AddPostForm = (props) => {\n  return(\n    <form onSubmit={props.handleSubmit}>\n        <Field\n          component={Textarea}\n          placeholder={'Add new Post'}\n          name={'newPost'}\n          validate={[required, maxLength100]}\n        ></Field>\n        <button>Add post</button>\n      </form>\n  )\n}\nAddPostForm = reduxForm({form: 'newPostForm'})(AddPostForm)\n\nconst MyPosts = React.memo(props => {\n  const postElement = props.postsData.map((el) => (\n    <Post key={el.id} message={el.message} likeCount={el.likeCount} />\n  ));\n\n  let addPost = (value) => {\n    props.addPost(value.newPost);\n  };\n  return (\n    <div>\n      My Post\n      <AddPostForm onSubmit={addPost}/>\n      <div>{postElement}</div>\n    </div>\n  );\n}) ;\n\n\nexport default MyPosts;\n","import { addPostAC } from \"../../../redux/profilePageReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n  };\n};\nconst mpaDispatchToProps = (dispatch) => {\n  return {\n    addPost(newPost) {\n      dispatch(addPostAC(newPost));\n    }\n  };\n};\nexport default connect(mapStateToProps, mpaDispatchToProps)(MyPosts);\n","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = React.memo((props) => {\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n\n  useEffect(()=>{\n    setStatus(props.status)\n  },[props.status])\n  const activateMode = () => {\n    setEditMode(true)\n  };\n  const deActivateMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  };\n  const changeStatus = (e) => {\n      setStatus(e.target.value)\n  }\n    return (\n      <>\n        {!editMode && (\n          <div>\n            <span onClick={activateMode}>{props.status}</span>\n          </div>\n        )}\n        {editMode && (\n          <div>\n            <input autoFocus onBlur={deActivateMode} onChange={changeStatus} value={status} />\n          </div>\n        )}\n      </>\n    );\n})\n\nexport default ProfileStatusWithHooks;\n","import Profile from '../Profile'\nimport ProfileInfo from './ProfileInfo'\n\nexport default ProfileInfo","import React from \"react\";\nimport styles from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if(!profile){\n        return <Preloader/>\n    }\n  return (\n    <div className={styles.profileInfo}>\n      <div>\n        <img src={profile.photos.large} />\n      </div>\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n      <div>\n          <span>{profile.fullName}</span>\n          <br/>\n          <span>{profile.aboutMe}</span>\n          <br/>\n          <span>{profile.lookingForAJobDescription}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo\n","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n      <MyPostsContainer />\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, updateStatus } from \"./../../redux/profilePageReducer\";\nimport {withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getProfile, getAuthorizedId, getStatus } from \"../../utils/selectors\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedId;\n      if(!userId){\n        this.props.history.push(\"/login\")\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId)\n\n  }\n  render() {\n    return (\n      <div>\n        <Profile {...this.props} \n        profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  profile: getProfile(state),\n  status: getStatus(state),\n  authorizedId: getAuthorizedId(state)\n});\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\n  withRouter\n)(ProfileContainer)\n"],"sourceRoot":""}